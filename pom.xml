<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.sti.smartfire</groupId>
    <artifactId>smartfire</artifactId>
    <packaging>war</packaging>
    <version>2.0-SNAPSHOT</version>

    <!-- Project properties -->
    <name>SMARTFIRE</name>
    <description>SMARTFIRE: Satellite Mapping Automated Reanalysis Tool for Fire Incident REconciliation</description>
    <url>http://www.sonomatechdata.com/smartfire/</url>
    <inceptionYear>2006</inceptionYear>
    <organization>
        <name>Sonoma Technology, Inc.</name>
        <url>http://www.sonomatech.com/</url>
    </organization>

    <!-- People -->
    <developers>
        <developer>
            <name>Daniel Pryden</name>
            <email>daniel@sonomatech.com</email>
            <roles>
                <role>Architect</role>
                <role>Technical Lead</role>
                <role>Developer</role>
            </roles>
        </developer>
        <developer>
            <name>Sean Raffuse</name>
            <email>sraffuse@sonomatech.com</email>
            <roles>
                <role>Scientific Lead</role>
                <role>Algorithm Designer</role>
            </roles>
        </developer>
        <developer>
            <name>Thom Dedecko</name>
            <email>tdedecko@sonomatech.com</email>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
    </developers>

    <!-- Global properties -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <geotools.version>9.4</geotools.version>
        <hibernate.version>3.5.4-Final</hibernate.version>
        <netbeans.hint.deploy.server>Tomcat60</netbeans.hint.deploy.server>
        <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>
        <buildTimestamp>${maven.build.timestamp}</buildTimestamp>
    </properties>

    <!-- Source control -->
    <scm>
        <connection>scm:svn:http://devserv1.sonomatech.com/svn/projects/BlueSky/SMARTFIRE/trunk</connection>
        <developerConnection>scm:svn:http://devserv1.sonomatech.com/svn/projects/BlueSky/SMARTFIRE/trunk</developerConnection>
        <tag>HEAD</tag>
        <url>http://devserv1.sonomatech.com/svn/projects/BlueSky/SMARTFIRE/trunk</url>
    </scm>

    <!-- Issue management -->
    <issueManagement>
        <system>JIRA</system>
        <url>http://dev.sonomatech.com/browse/SF/</url>
    </issueManagement>

    <!-- Continuous Integration -->
    <ciManagement>
        <system>Jenkins</system>
        <url>http://devserv1.sonomatech.com/jenkins/job/SMARTFIRE/</url>
    </ciManagement>

    <!-- Site Deployment -->
    <distributionManagement>
        <site>
            <id>smartfire-site</id>
            <url>scp://smartfiredev.sonomatech.com/var/lib/tomcat6/webapps/ROOT</url>
        </site>
    </distributionManagement>

    <!-- Build configuration -->
    <build>
        <finalName>smartfire</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>

            <!--
                The maven-processor-plugin runs any Java Annotation Processors
                in a separate step from compilation.  This helps to fix some
                issues with the JPA 2.0 metamodel generator.
            -->
            <plugin>
                <groupId>org.bsc.maven</groupId>
                <artifactId>maven-processor-plugin</artifactId>
                <version>1.3.6</version>
                <!-- Override the version of the dependency; our Nexus couldn't find version 1.3.3 -->
                <dependencies>
                    <dependency>
                        <groupId>org.jfrog.maven.annomojo</groupId>
                        <artifactId>maven-plugin-tools-anno</artifactId>
                        <version>1.3.1</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>process</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <outputDirectory>target/generated-sources/annotations</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
                This plugin generates the target/hibernate3/sql/smartfire_database.sql
                file from the JPA entities defined in the persistence.xml file.
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>hibernate3-maven-plugin</artifactId>
                <version>2.2</version>
                <!-- Override the dependency versions to use a more recent Hibernate and JPA version -->
                <dependencies>
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-core</artifactId>
                        <version>${hibernate.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-entitymanager</artifactId>
                        <version>${hibernate.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-annotations</artifactId>
                        <version>${hibernate.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>ejb3-persistence</artifactId>
                        <version>3.3.2.Beta1</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>hbm2doc</id>
                        <phase>site</phase>
                        <goals>
                            <goal>hbm2doc</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>hbm2ddl</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>hbm2ddl</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <components>
                        <component>
                            <name>hbm2doc</name>
                            <outputDirectory>target/site/hibernate</outputDirectory>
                            <implementation>jpaconfiguration</implementation>
                        </component>
                        <component>
                            <name>hbm2ddl</name>
                            <implementation>jpaconfiguration</implementation>
                        </component>
                    </components>
                    <componentProperties>
                        <persistenceunit>smartfire</persistenceunit>
                        <outputfilename>smartfire_database.sql</outputfilename>
                        <console>false</console>
                        <drop>false</drop>
                        <create>true</create>
                        <export>false</export>
                        <format>true</format>
                        <dot.executable>${dot.executable}</dot.executable>
                    </componentProperties>
                </configuration>
            </plugin>
            <!--
                Maven Enforcer plugin: Enforce Maven and Java versions,
                and force dependencies and plugins to be configured properly.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>2.2.1</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>1.6</version>
                                </requireJavaVersion>
                                <requirePluginVersions>
                                    <banSnapshots>true</banSnapshots>
                                </requirePluginVersions>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Specify Maven plugin versions to ensure repeatable builds -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <warSourceExcludes>images/src/**,css/blueprint/src/**,css/blueprint/plugins/**</warSourceExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.5</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.3.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.3</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.1.1</version>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>7.3.0.v20110203</version>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.2</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependencies</report>
                            <report>project-team</report>
                            <report>mailing-list</report>
                            <report>cim</report>
                            <report>issue-tracking</report>
                            <report>license</report>
                            <report>scm</report>
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changes-plugin</artifactId>
                <version>2.4</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>jira-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <jiraUser>${jiraUser}</jiraUser>
                    <jiraPassword>${jiraPassword}</jiraPassword>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.6.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.6</version>
            </plugin>
            <plugin>
                <groupId>com.googlecode.maven-overview-plugin</groupId>
                <artifactId>maven-overview-plugin</artifactId>
                <version>1.6</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.4</version>
            </plugin>
        </plugins>
    </reporting>

    <dependencyManagement>
        <dependencies>
            <!-- Ignore it when dependencies say they want Jakarta Commons Logging (we'll use SLF4J instead) -->
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.1.1</version>
                <scope>provided</scope>
            </dependency>
            <!-- Force dependencies that use SLF4J (like Hibernate) to use the same SLF4J version -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.6.1</version>
            </dependency>
            <!-- Force hibernate-spatial-postgis to use our version of the postgres driver -->
            <dependency>
                <groupId>postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>8.4-702.jdbc4</version>
            </dependency>
            <!-- Lock down conflicted transient dependencies on hibernate-core -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <!-- Lock down conflicted transient dependencies on javassist -->
            <dependency>
                <groupId>javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>3.11.0.GA</version>
            </dependency>
            <!-- Lock down conflicted transient dependencies on commons-collections -->
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>3.2.1</version>
            </dependency>
            <!-- Lock down JAK's dependencies to non-SNAPSHOT versions -->
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-xjc</artifactId>
                <version>2.2</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>2.2</version>
            </dependency>
            <!-- Lock down conflicted transient dependencies on dom4j -->
            <dependency>
                <groupId>dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>1.6.1</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Dependencies -->
    <dependencies>
        <!-- Servlet API library -->
        <!--
            This is marked "provided" because, although we need a version of
            the JAR to compile against, we don't want to include it in the .war
            file, since the servlet container will provide its own copy.
        -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>

        <!-- Stapler -->
        <dependency>
            <groupId>org.kohsuke.stapler</groupId>
            <artifactId>stapler</artifactId>
            <version>1.162</version>
            <exclusions>
                <exclusion>
                    <artifactId>junit</artifactId>
                    <groupId>junit</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Jelly -->
        <dependency>
            <groupId>org.kohsuke.stapler</groupId>
            <artifactId>stapler-jelly</artifactId>
            <version>1.162</version>
        </dependency>
        <dependency>
            <groupId>commons-jelly</groupId>
            <artifactId>commons-jelly-tags-define</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- Java Topology Suite (geometry implementation) -->
        <dependency>
            <groupId>com.vividsolutions</groupId>
            <artifactId>jts</artifactId>
            <version>1.13</version>
        </dependency>

        <!-- Hibernate Spatial for postgis -->
        <dependency>
            <groupId>org.hibernatespatial</groupId>
            <artifactId>hibernate-spatial-postgis</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- Hibernate -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>1.0.0.Final</version>
        </dependency>

        <!-- the Postgis JDBC driver -->
        <dependency>
            <groupId>org.postgis</groupId>
            <artifactId>postgis-jdbc</artifactId>
            <version>1.3.3</version>
        </dependency>

        <!-- the postgresql driver -->
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <!-- Flyway (database migration tool) -->
        <dependency>
            <groupId>com.googlecode.flyway</groupId>
            <artifactId>flyway-core</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- GeoTools -->
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-main</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-shapefile</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-epsg-hsql</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-geojson</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-process</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-process-raster</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-geotiff</artifactId>
            <version>${geotools.version}</version>
        </dependency>               
        <dependency>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
            <version>1.1.3</version>
        </dependency>

        <!-- Google Guava (successor to Google Collections library) -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>r09</version>
        </dependency>

        <!-- Cron4j cron parser and scheduler -->
        <dependency>
            <groupId>cron4j</groupId>
            <artifactId>cron4j</artifactId>
            <version>2.2.3</version>
        </dependency>

        <!-- XStream XML serialization library -->
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.4.13-java7</version>
        </dependency>

        <!-- CSV reader and writer -->
        <dependency>
            <groupId>net.sf.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>2.0</version>
        </dependency>

        <!-- jak:  Java API for KML -->
        <dependency>
            <groupId>de.micromata.jak</groupId>
            <artifactId>JavaAPIforKml</artifactId>
            <version>2.2.0</version>
        </dependency>

        <!-- JodaTime library -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>1.6.1</version>
        </dependency>

        <!-- STI's Justice utility library -->
        <dependency>
            <groupId>com.sti</groupId>
            <artifactId>justice</artifactId>
            <version>1.8-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.sti</groupId>
            <artifactId>JusticeGIS</artifactId>
            <version>1.8-SNAPSHOT</version>
        </dependency>     

        <!-- Apache Commons Net (used for FTP implementation) -->
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>2.2</version>
        </dependency>

        <!-- jdbf.jar library for reading DBF files -->
        <dependency>
            <groupId>com.svcon</groupId>
            <artifactId>jdbf</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- @MetaInfServices annotation -->
        <dependency>
            <groupId>org.kohsuke.metainf-services</groupId>
            <artifactId>metainf-services</artifactId>
            <version>1.1</version>
            <optional>true</optional>
        </dependency>

        <!-- Logging: use SLF4J -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <!-- Use SLF4J's implementation of Jakarta Commons Logging classes -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.6.1</version>
        </dependency>
        <!-- Delegate java.util.logging logs to SLF4J -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>1.6.1</version>
        </dependency>
        <!-- Jackson JSON library -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.3</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mrbean</artifactId>
            <version>1.9.3</version>
        </dependency>
        <!-- SLF4J: Delegate to Log4J -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.6.1</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.3.4</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>sti-nexus</id>
            <url>http://devserv1.sonomatech.com:8082/nexus/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>

    <profiles>
        <!-- Support building the site under either Maven 2.x or 3.x -->
        <profile>
            <id>maven-2</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>2.1.1</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>maven-3</id>
            <activation>
                <file>
                    <!--  This employs that the basedir expression is only recognized by Maven 3.x (see MNG-2363) -->
                    <exists>${basedir}</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>3.0-beta-3</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- Work around a bug in the maven-processor-plugin that would cause the build to fail on Mac OS X -->
        <profile>
            <id>mac-os-x</id>
            <activation>
                <os>
                    <family>mac</family>
                    <name>mac os x</name>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.bsc.maven</groupId>
                        <artifactId>maven-processor-plugin</artifactId>
                        <version>1.3.6</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.sun</groupId>
                                <artifactId>tools</artifactId>
                                <version>1.5.0</version>
                                <scope>system</scope>
                                <systemPath>${java.home}/../Classes/classes.jar</systemPath>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
